from collections import deque
from events.events import Event

class EventQueue(object):
    """An event queue is a queue holding each of the events generated by the system. This is used to manage the order of events.

    Attributes:
        queue: A deque object representing the queue of events.
    """
    def __init__(self):
        """Constructor method
        """
        self.queue = deque()

    def peek(self)->Event:
        """Look at the first element in the queue without popping it.

        Returns:
            Event: Returns the first event in the queue, or None is the queue is empty.
        """
        if self.is_empty():
            return None
        return self.queue[0]

    def get_next(self)->Event:
        """Pops the first element from the queue and returns it. 

        Returns:
            Event: Returns the first event in the queue, or None is the queue is empty.
        """
        if self.is_empty():
            return None
        return self.queue.popleft()

    def put(self, event: Event):
        """Adds a new element to the back of the Event queue

        Args:
            event (Event): The event being added to the queue.
        """
        self.queue.append(event)

    def is_empty(self)->bool:
        """Check whether the queue is empty.

        Returns:
            bool: True if queue is empty, False otherwise
        """
        return len(self.queue) == 0
    